name: Deploy to Maven Central

on:
  pull_request:
    types: [opened, synchronize]
    branches: [main]

jobs:
  deploy:
    if: github.head_ref == 'develop' || startsWith(github.head_ref, 'release/')
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
          
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v2
        
      - name: Determine version from branch
        id: version
        run: |
          BRANCH_NAME="${{ github.head_ref }}"
          echo "Source branch: $BRANCH_NAME"
          
          # Set version based on branch name
          if [[ "$BRANCH_NAME" =~ ^release/v([0-9]+\.[0-9]+\.[0-9]+)$ ]]; then
            VERSION="${BASH_REMATCH[1]}"
            echo "Release branch detected, version: $VERSION"
          elif [[ "$BRANCH_NAME" == "main" ]]; then
            VERSION="1.0.0"
            echo "Main branch detected, using base version: $VERSION"
          else
            SANITIZED_BRANCH=$(echo "$BRANCH_NAME" | sed 's/[^a-zA-Z0-9]/-/g')
            VERSION="1.0.0-${SANITIZED_BRANCH}-SNAPSHOT"
            echo "Feature branch detected, version: $VERSION"
          fi
          
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Final version: $VERSION"
        
      - name: Set up Gradle
        uses: gradle/gradle-build-action@v2
        
      - name: Publish plugins to Maven Central
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
          GPG_SIGNING_KEY: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          GPG_SIGNING_PASSWORD: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
          VERSION: ${{ steps.version.outputs.version }}
        run: |
          echo "Publishing plugins version: $VERSION"
          ./gradlew publishToSonatype closeAndReleaseSonatypeStagingRepository -Pversion=$VERSION
          
      - name: Enable auto-merge for PR
        if: success()
        run: |
          gh pr merge --squash --auto
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}